services:

  users_db:
    image: postgres:16
    container_name: users_db
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: "${POSTGRES_DB}"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 5s
      timeout: 5s
      retries: 10
    restart: unless-stopped
    networks:
      - currency_network

  users_service:
    container_name: users_service
    build:
      context: .
      dockerfile: Dockerfile
    command: uvicorn app.main:app --host 0.0.0.0 --port $APP_PORT --reload
    ports:
      - "${APP_PORT}:${APP_PORT}"
    volumes:
      - ./app:/app/app
    env_file:
      - .env
    environment:
      - POSTGRES_PORT=5432
    depends_on:
      users_db:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - currency_network

  users_init_container:
    build:
      context: .
      dockerfile: init.Dockerfile
    depends_on:
      users_db:
        condition: service_healthy
    env_file:
      - .env
    environment:
      - POSTGRES_PORT=5432
    networks:
      - currency_network


  celery_worker:
    container_name: celery_worker
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A app.celery.celery worker --loglevel=info
    volumes:
      - ./app:/app/app
    environment:
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
    depends_on:
      - users_service
    networks:
      - currency_network

  flower:
    container_name: flower
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A app.celery.celery flower --port=5555
    ports:
      - 5556:5555
    environment:
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
    depends_on:
      - users_service
      - celery_worker
    networks:
      - currency_network

volumes:
  pg_data:


networks:
  currency_network:
    external: true
    name: currency_network