services:
  currency_db:
    image: postgres:16
    container_name: currency_db
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: "${POSTGRES_DB}"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 10
    restart: unless-stopped
    networks:
      - currency_network

  currency_service:
    container_name: currency_service
    build:
      context: .
      dockerfile: Dockerfile
    command: uvicorn --log-level debug app.main:app --host 0.0.0.0 --port $APP_PORT --reload
    env_file:
      - .env  # Подключаем общий .env файл
    environment: &env
      # Все переменные берутся из .env
      POSTGRES_HOST: "${POSTGRES_HOST}"
      POSTGRES_PORT: "${POSTGRES_PORT}"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: "${POSTGRES_DB}"
      APP_PORT: "${APP_PORT}"
      SQLALCHEMY_ECHO: "${SQLALCHEMY_ECHO}"
      SQLALCHEMY_POOL_SIZE: "${SQLALCHEMY_POOL_SIZE}"
      LOGGING_LEVEL: "${LOGGING_LEVEL}"
    ports:
      - "${APP_PORT}:${APP_PORT}"
    volumes:
      - .:/app
    depends_on:
      currency_db:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - currency_network

volumes:
  pg_data:

networks:
  currency_network:
    driver: bridge
